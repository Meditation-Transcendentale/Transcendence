services:
  nats:
    image: nats:latest
    container_name: nats
    environment:
      - NATS_TOKEN=${NATS_TOKEN}
      - NATS_GAME_TOKEN=${NATS_GAME_TOKEN}
      - NATS_LEAF_TOKEN=${NATS_LEAF_TOKEN}
    volumes:
      - ./services/stats/nats-server.conf:/nats-server.conf:ro
      - ./shared/certs:/etc/certs:ro
    command: ["-c", "/nats-server.conf"]
    networks:
      - transcendence-network
      - nats-network
    depends_on:
      database_certs-init:
        condition: service_completed_successfully
  
  stats_manager:
    build: 
      context: ./services/stats/stats_manager
    container_name: stats_manager
    volumes:
      - stats_shared:/app/shared
      - ./shared/db:/app/data
      - ./shared/certs:/app/certs:ro
    environment:
      - NODE_ENV=development
      - SSL_KEY=${SSL_KEY}
      - SSL_CERT=${SSL_CERT}
      - API_GATEWAY_KEY=${API_GATEWAY_KEY}
      - NATS_URL=${NATS_URL}
      - NATS_TOKEN=${NATS_TOKEN}
    networks:
      - transcendence-network
    depends_on:
      database_certs-init:
        condition: service_completed_successfully

  stats_database:
    build: 
      context: ./services/stats/stats_database
    container_name: stats_database
    volumes:
      - ./shared/db:/app/data
      - ./shared/certs:/app/certs:ro
      - stats_shared:/app/shared
    environment:
      - NODE_ENV=development
      - DATABASE_URL=${DATABASE_URL}
      - NATS_URL=${NATS_URL}
      - NATS_TOKEN=${NATS_TOKEN}

    networks:
      - transcendence-network
    depends_on:
      database_certs-init:
        condition: service_completed_successfully
      nats:
        condition: service_started

volumes:
  stats_shared:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./services/stats/shared
  