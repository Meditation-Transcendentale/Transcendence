const statusCode = {
	SUCCESS: 200,
	CREATED: 201,
	BAD_REQUEST: 400,
	UNAUTHORIZED: 401,
	NOT_FOUND: 404,
	CONFLICT: 409,
	INTERNAL_SERVER_ERROR: 500,
};

const returnMessages = {
	UNAUTHORIZED: 'Unauthorized',
	INTERNAL_SERVER_ERROR: 'Internal server error',
	FRIENDSHIP_NOT_FOUND: 'Friendship not found',
	FRIEND_REQUEST_NOT_FOUND: 'Friend request not found',
	FRIEND_REQUEST_SENT: 'Friend request sent',
	FRIEND_REQUEST_ACCEPTED: 'Friend request accepted',
	FRIEND_REQUEST_DECLINED: 'Friend request declined',
	AUTO_FRIEND_REQUEST: 'You cannot add yourself as a friend',
	AUTO_DELETE_REQUEST: 'You cannot delete yourself as a friend',
	AUTO_DECLINE_REQUEST: 'You cannot decline yourself as a friend',
	AUTO_BLOCK_REQUEST: 'You cannot block yourself',
	AUTO_UNBLOCK_REQUEST: 'You cannot unblock yourself',
	FRIEND_DELETED: 'Friendship deleted',
	ALREADY_FRIEND: 'You are already friends with this user',
	ALREADY_FRIEND_REQUEST: 'Friend request already sent',
	ALREADY_RECEIVED: 'This user has already sent you a friend request',
	ALREADY_BLOCKED: 'You have already blocked this user',
	USER_BLOCKED_YOU: 'This user has blocked you',
	NOT_BLOCKED: 'You cannot unblock a user that you have not blocked',
	ADD_BLOCKED_USER: 'You cannot add a blocked user as a friend',
	NO_BLOCKED_USERS: 'You have no blocked users',
	FRIENDLIST_NOT_FOUND: 'Friendlist is empty',
	SELF_RESEARCH: 'You cannot search for yourself',
	USER_NOT_FOUND: 'User not found',
	USERNAME_ALREADY_USED: 'Username is already in use',
	USERNAME_PASSWORD_REQUIRED: 'Username and password are required',
	USERNAME_REQUIRED: 'Player username is required',
	PASSWORD_REQUIRED: 'Password is required',
	NEW_PASSWORD_REQUIRED: 'New password is required',
	AVATAR_REQUIRED: 'No avatar file provided',
	UUID_REQUIRED: 'UUID is required',
	PASSWORD_INVALID: 'Password must be at least 8 characters long, contain at least one uppercase letter, one lowercase letter, and one number',
	USERNAME_INVALID: 'Username must be between 3 and 20 characters without any special characters',
	INVALID_AVATAR_URL: 'Invalid avatar URL',
	INVALID_TYPE: 'Invalid image type',
	INVALID_TOKEN: 'Invalid token',
	INVALID_CODE: 'Invalid code',
	USERNAME_UPDATED: 'User info updated',
	PASSWORD_UPDATED: 'Password updated successfully',
	AVATAR_UPDATED: 'Avatar updated successfully',
	USER_BLOCKED: 'User blocked',
	USER_BLOCKED_SUCCESS: 'User blocked successfully',
	USER_UNBLOCKED: 'User unblocked successfully',
	NOTHING_TO_UPDATE: 'Nothing to update',
	BAD_PASSWORD: 'Invalid password',
	MISSING_TOKEN: 'Token is required',
	TWO_FA_ALREADY_ENABLED: '2FA is already enabled',
	TWO_FA_ENABLED: '2FA is enabled',
	TWO_FA_NOT_ENABLED: '2FA is not enabled',
	TWO_FA_VERIFIED: '2FA verified',
	TWO_FA_DISABLED: '2FA disabled',
	LOGGED_IN: 'Logged in successfully',
	GOOGLE_LOGGED_IN: 'Logged in with Google successfully',
	GOOGLE_CREATED_LOGGED_IN: 'Registered and logged in with Google successfully',
	LOGGED_OUT: 'Logged out successfully',
	USER_CREATED: 'User registered successfully',
	INTRA42_LOGGED_IN: 'Logged in with Intra42 successfully',
	CANT_ENABLE_2FA: 'You cannot enable 2FA for this account',
	PLAYER_INACTIVE: 'Player not in a lobby or a game',
	STATUS_ALREADY_EXISTS: 'Status already exists for this user',
	INVALID_STATUS: 'Invalid status value',
	STATUS_ADDED: 'Status added successfully',
	STATUS_UPDATED: 'Status updated successfully',
	STATUS_NOT_FOUND: 'Status not found for this user',
	BAD_GAME_ID: 'Invalid game or lobby ID',
};

const statusReturn = { 
	STATUS_001: { code: STATUS_001, message: returnMessages.PLAYER_INACTIVE },
	STATUS_002: { code: STATUS_002, message: returnMessages.STATUS_ALREADY_EXISTS },
	STATUS_003: { code: STATUS_003, message: returnMessages.INVALID_STATUS },
	STATUS_004: { code: STATUS_004, message: returnMessages.STATUS_ADDED },
	STATUS_005: { code: STATUS_005, message: returnMessages.STATUS_UPDATED },
	STATUS_006: { code: STATUS_006, message: returnMessages.STATUS_NOT_FOUND },
	STATUS_007: { code: STATUS_007, message: returnMessages.BAD_GAME_ID },
}

const userReturn = { 
	USER_001: { code: USER_001, message: returnMessages.USER_NOT_FOUND },
	USER_002: { code: USER_002, message: returnMessages.USERNAME_ALREADY_USED },
	USER_003: { code: USER_003, message: returnMessages.USERNAME_PASSWORD_REQUIRED },
	USER_004: { code: USER_004, message: returnMessages.USERNAME_REQUIRED },
	USER_005: { code: USER_005, message: returnMessages.PASSWORD_REQUIRED },
	USER_006: { code: USER_006, message: returnMessages.NEW_PASSWORD_REQUIRED },
	USER_007: { code: USER_007, message: returnMessages.AVATAR_REQUIRED },
	USER_008: { code: USER_008, message: returnMessages.UUID_REQUIRED },
	USER_009: { code: USER_009, message: returnMessages.PASSWORD_INVALID },
	USER_010: { code: USER_010, message: returnMessages.USERNAME_INVALID },
	USER_011: { code: USER_011, message: returnMessages.INVALID_AVATAR_URL },
	USER_012: { code: USER_012, message: returnMessages.INVALID_TYPE },
	USER_013: { code: USER_013, message: returnMessages.INVALID_TOKEN },
	USER_014: { code: USER_014, message: returnMessages.INVALID_CODE },
	USER_015: { code: USER_015, message: returnMessages.USERNAME_UPDATED },
	USER_016: { code: USER_016, message: returnMessages.PASSWORD_UPDATED },
	USER_017: { code: USER_017, message: returnMessages.AVATAR_UPDATED },
	USER_018: { code: USER_018, message: returnMessages.USER_BLOCKED },
	USER_019: { code: USER_019, message: returnMessages.USER_BLOCKED_SUCCESS },
	USER_020: { code: USER_020, message: returnMessages.USER_UNBLOCKED },
	USER_021: { code: USER_021, message: returnMessages.NOTHING_TO_UPDATE },
	USER_022: { code: USER_022, message: returnMessages.BAD_PASSWORD },
	USER_023: { code: USER_023, message: returnMessages.MISSING_TOKEN },
	USER_024: { code: USER_024, message: returnMessages.TWO_FA_ALREADY_ENABLED },
	USER_025: { code: USER_025, message: returnMessages.TWO_FA_ENABLED },
	USER_026: { code: USER_026, message: returnMessages.TWO_FA_NOT_ENABLED },
	USER_027: { code: USER_027, message: returnMessages.TWO_FA_VERIFIED },
	USER_028: { code: USER_028, message: returnMessages.TWO_FA_DISABLED },
	USER_029: { code: USER_029, message: returnMessages.CANT_ENABLE_2FA },
	USER_030: { code: USER_030, message: returnMessages.GOOGLE_LOGGED_IN },
	USER_031: { code: USER_031, message: returnMessages.GOOGLE_CREATED_LOGGED_IN },
	USER_032: { code: USER_032, message: returnMessages.LOGGED_OUT },
	USER_033: { code: USER_033, message: returnMessages.USER_CREATED },
	USER_034: { code: USER_034, message: returnMessages.INTRA42_LOGGED_IN },
	USER_035: { code: USER_035, message: returnMessages.LOGGED_IN },
};

const friendshipReturn = {
	FRIEND_001: { code: FRIEND_001, message: returnMessages.FRIENDSHIP_NOT_FOUND },
	FRIEND_002: { code: FRIEND_002, message: returnMessages.FRIEND_REQUEST_NOT_FOUND },
	FRIEND_003: { code: FRIEND_003, message: returnMessages.FRIEND_REQUEST_SENT },
	FRIEND_004: { code: FRIEND_004, message: returnMessages.FRIEND_REQUEST_ACCEPTED },
	FRIEND_005: { code: FRIEND_005, message: returnMessages.FRIEND_REQUEST_DECLINED },
	FRIEND_006: { code: FRIEND_006, message: returnMessages.AUTO_FRIEND_REQUEST },
	FRIEND_007: { code: FRIEND_007, message: returnMessages.AUTO_DELETE_REQUEST },
	FRIEND_008: { code: FRIEND_008, message: returnMessages.AUTO_DECLINE_REQUEST },
	FRIEND_009: { code: FRIEND_009, message: returnMessages.AUTO_BLOCK_REQUEST },
	FRIEND_010: { code: FRIEND_010, message: returnMessages.AUTO_UNBLOCK_REQUEST },
	FRIEND_011: { code: FRIEND_011, message: returnMessages.FRIEND_DELETED },
	FRIEND_012: { code: FRIEND_012, message: returnMessages.ALREADY_FRIEND },
	FRIEND_013: { code: FRIEND_013, message: returnMessages.ALREADY_FRIEND_REQUEST },
	FRIEND_014: { code: FRIEND_014, message: returnMessages.ALREADY_RECEIVED },
	FRIEND_015: { code: FRIEND_015, message: returnMessages.ALREADY_BLOCKED },
	FRIEND_016: { code: FRIEND_016, message: returnMessages.USER_BLOCKED_YOU },
	FRIEND_017: { code: FRIEND_017, message: returnMessages.NOT_BLOCKED },
	FRIEND_018: { code: FRIEND_018, message: returnMessages.ADD_BLOCKED_USER },
	FRIEND_019: { code: FRIEND_019, message: returnMessages.NO_BLOCKED_USERS },
	FRIEND_020: { code: FRIEND_020, message: returnMessages.FRIENDLIST_NOT_FOUND },
	FRIEND_021: { code: FRIEND_021, message: returnMessages.SELF_RESEARCH }
};

export { statusCode, returnMessages, friendshipReturn, userReturn, statusReturn };