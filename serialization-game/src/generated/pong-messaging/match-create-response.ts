// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class MatchCreateResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):MatchCreateResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsMatchCreateResponse(bb:flatbuffers.ByteBuffer, obj?:MatchCreateResponse):MatchCreateResponse {
  return (obj || new MatchCreateResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsMatchCreateResponse(bb:flatbuffers.ByteBuffer, obj?:MatchCreateResponse):MatchCreateResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new MatchCreateResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

gameid():string|null
gameid(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
gameid(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startMatchCreateResponse(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addGameid(builder:flatbuffers.Builder, gameidOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, gameidOffset, 0);
}

static endMatchCreateResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createMatchCreateResponse(builder:flatbuffers.Builder, gameidOffset:flatbuffers.Offset):flatbuffers.Offset {
  MatchCreateResponse.startMatchCreateResponse(builder);
  MatchCreateResponse.addGameid(builder, gameidOffset);
  return MatchCreateResponse.endMatchCreateResponse(builder);
}
}
