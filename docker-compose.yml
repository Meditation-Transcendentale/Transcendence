
services:
  register-service:
    build: 
      context: ./services/user/register-service
    ports:
      - "4001:4001"
    volumes:
      - ./shared/db:/app/data
      - ./shared/certs:/app/certs:ro
      # - database:/app/database
      # - certs:/app/certs:ro
    environment:
      - NODE_ENV=development
      - JWT_SECRETKEY=${JWT_SECRETKEY}
      - DATABASE_URL=${DATABASE_URL}
      - SSL_KEY=${SSL_KEY}
      - SSL_CERT=${SSL_CERT}
      - API_GATEWAY_KEY=${API_GATEWAY_KEY}
    networks:
      - transcendence-network
    depends_on:
      - database_certs-init

  auth-service:
    build:
      context: ./services/user/auth-service
    ports:
      - "4002:4002"
    volumes:
      # - database:/app/database
      - ./shared/db:/app/data
      - ./shared/certs:/app/certs:ro
      # - certs:/app/certs:ro
    environment:
      - NODE_ENV=development
      - JWT_SECRETKEY=${JWT_SECRETKEY}
      - DATABASE_URL=${DATABASE_URL}
      - SSL_KEY=${SSL_KEY}
      - SSL_CERT=${SSL_CERT}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - API_GATEWAY_KEY=${API_GATEWAY_KEY}
    networks:
      - transcendence-network
    depends_on:
      - database_certs-init

  update_user_info-service:
    build:
      context: ./services/user/update_user_info-service
    ports:
      - "4003:4003"
    volumes:
      # - database:/app/database
      - ./shared/db:/app/data
      - ./shared/certs:/app/certs:ro
      # - certs:/app/certs:ro
    environment:
      - NODE_ENV=development
      - SSL_KEY=${SSL_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - SSL_CERT=${SSL_CERT}
      - API_GATEWAY_KEY=${API_GATEWAY_KEY}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
    networks:
      - transcendence-network
    depends_on:
      - database_certs-init

  api-gateway:
    build:
      context: ./gateway
    ports:
      - "3000:3000"
    volumes:
      # - certs:/app/certs:ro
      - ./shared/certs:/app/certs:ro
    environment:
      - NODE_ENV=development
      - SSL_KEY=${SSL_KEY}
      - SSL_CERT=${SSL_CERT}
      - API_GATEWAY_KEY=${API_GATEWAY_KEY}
    networks:
      - transcendence-network
    depends_on:
      - auth-service
      - register-service
      - update_user_info-service
      - database_certs-init

  docs-service:
    build:
      context: ./doc/doc_API
    ports:
      - "3001:3001"
    volumes:
      # - certs:/app/certs:ro
      - ./shared/certs:/app/certs:ro
    environment:
      - NODE_ENV=development
      - SSL_KEY=${SSL_KEY}
      - SSL_CERT=${SSL_CERT}
      - API_GATEWAY_KEY=${API_GATEWAY_KEY}
    networks:
      - transcendence-network
    depends_on:
      - api-gateway
      - auth-service
      - register-service
      - update_user_info-service
      - database_certs-init
  
  database_certs-init:
    build:
      context: ./database_certs-init
    volumes:
      - ./shared/db:/app/data
      - ./shared/certs:/app/certs
    environment:
      - NODE_ENV=development
      - SSL_KEY=${SSL_KEY}
      - SSL_CERT=${SSL_CERT}
    networks:
      - transcendence-network



volumes:
  database:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATABASE_URL_PATH}
  certs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATABASE_URL_PATH}

networks:
  transcendence-network:
    driver: bridge