{
	"openapi": "3.0.0",
	"info": {
		"title": "Auth service Documentation",
		"version": "1.0.0",
		"description": "Documentation for the Auth Service in the API. PORT=3001"
	},
	"components": {
		"securitySchemes": {
			"ApiKey": {
				"type": "apiKey",
				"in": "header",
				"name": "x-api-key",
				"description" : "API Key required to access the endpoints."
			}
		}
	},
	"security": [
		{
			"ApiKey": []
		}
	],
	"paths": {
        "/register": {
            "post": {
                "summary": "Register a new user",
                "tags": ["Register"],
                "description": "Register a new user in DB. ( Allowed characters for password : !?@#$%&*()_{};:|,.<>",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["username", "password"],
                                "properties": {
                                    "username": { "type": "string", "example": "user123", "description": "Username must be at least 3 characters long and maximum 20 characters long. Allowed characters: a-z, A-Z, 0-9" },
									"password": { "type": "string", "format": "password", "example": "password1234", "description": "Password must be at least 8 characters long, contain at least one uppercase letter, one lowercase letter and one digit. Allowed special characters : !?@#$%&*()_{};:|,.<>" }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful registration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Name, and password are required"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Username already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Username is already in use"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server Error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}