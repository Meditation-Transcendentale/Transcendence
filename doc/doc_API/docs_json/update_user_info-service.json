{
	"openapi": "3.0.0",
	"info": {
		"title": "Auth service Documentation",
		"version": "1.0.0",
		"description": "Documentation for the Auth Service in the API."
	},
	"components": {
		"securitySchemes": {
			"ApiKey": {
				"type": "apiKey",
				"in": "header",
				"name": "x-api-key",
				"description" : "API Key required to access the endpoints."
			}
		}
	},
	"security": [
		{
			"ApiKey": []
		}
	],
	"paths": {
        "/update-info": {
            "patch": {
                "summary": "Update user information",
                "tags": ["Update Infos"],
                "description": "Update user information in DB.",
                "parameters": [
                    {
                        "name": "user",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "uuid": { "type": "string", "example": "c1b1a8e2-1e7a-4e3c-8c7e-1b2a3c4d5e6f" },
                                "role": { "type": "string", "example": "user" },
                                "iat": { "type": "integer", "example": "1700000000" },
                                "exp": { "type": "integer", "example": "1700036000" }
                            }
                        },
                        "description": "Encoded user information including UUID, role, issued-at (`iat`), and expiration (`exp`)."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "minProperties": 1,
                                "properties": {
                                    "username": { "type": "string", "example": "user123" },
                                    "avatar": { "type": "string", "format": "uri", "example": "https://example.com/avatar.png" },
									"password": { "type": "string", "format": "password", "example": "Password123" },
									"token": { "type": "string", "example": "448448" }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "User information updated successfully." }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "Nothing to update." }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "User not found." }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "Server error." }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/update-info/password": {
            "patch": {
                "summary": "Update user password",
                "tags": ["Update Infos"],
                "description": "Update user password in DB.",
                "parameters": [
                    {
                        "name": "user",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "uuid": { "type": "string", "example": "c1b1a8e2-1e7a-4e3c-8c7e-1b2a3c4d5e6f" },
                                "role": { "type": "string", "example": "user" },
                                "iat": { "type": "integer", "example": "1700000000" },
                                "exp": { "type": "integer", "example": "1700036000" }
                            }
                        },
                        "description": "Encoded user information including UUID, role, issued-at (`iat`), and expiration (`exp`)."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["password", "newPassword"],
                                "properties": {
                                    "password": { "type": "string", "format": "password", "example": "password123" },
                                    "newPassword": { "type": "string", "format": "password", "example": "newpassword123" },
                                    "token": { "type": "string", "example": "148484" }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "Password updated successfully." }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "Nothing to update" }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "Invalid password or invalid 2FA token" }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "User not found." }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "Server error." }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/friends/add": {
            "post": {
                "summary": "Send friend request",
                "tags": ["Friends"],
                "description": "Send a friend request to another user.",
                "parameters": [
                    {
                        "name": "user",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "uuid": { "type": "string", "example": "c1b1a8e2-1e7a-4e3c-8c7e-1b2a3c4d5e6f" },
                                "role": { "type": "string", "example": "user" },
                                "iat": { "type": "integer", "example": "1700000000" },
                                "exp": { "type": "integer", "example": "1700036000" }
                            }
                        },
                        "description": "Encoded user information including UUID, role, issued-at (`iat`), and expiration (`exp`)."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["inputUsername"],
                                "properties": {
                                    "inputUsername": { "type": "string", "example": "user1234" }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Friend request sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "Friend request sent successfully." }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "Player username is required" }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "User not found." }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "Server error." }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/friends/accept": {
            "post": {
                "summary": "Accept friend request",
                "tags": ["Friends"],
                "description": "Accept a friend request from another user.",
                "parameters": [
                    {
                        "name": "user",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "uuid": { "type": "string", "example": "c1b1a8e2-1e7a-4e3c-8c7e-1b2a3c4d5e6f" },
                                "role": { "type": "string", "example": "user" },
                                "iat": { "type": "integer", "example": "1700000000" },
                                "exp": { "type": "integer", "example": "1700036000" }
                            }
                        },
                        "description": "Encoded user information including UUID, role, issued-at (`iat`), and expiration (`exp`)."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["inputUsername"],
                                "properties": {
                                    "inputUsername": { "type": "string", "example": "user1234" }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Friend request accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "Friend request accepted." }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "Player id is required" }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "User not found." }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "Server error." }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/friends/decline": {
            "delete": {
                "summary": "Decline friend request",
                "tags": ["Friends"],
                "description": "Decline a friend request from another user.",
                "parameters": [
                    {
                        "name": "user",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "uuid": { "type": "string", "example": "c1b1a8e2-1e7a-4e3c-8c7e-1b2a3c4d5e6f" },
                                "role": { "type": "string", "example": "user" },
                                "iat": { "type": "integer", "example": "1700000000" },
                                "exp": { "type": "integer", "example": "1700036000" }
                            }
                        },
                        "description": "Encoded user information including UUID, role, issued-at (`iat`), and expiration (`exp`)."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["inputUsername"],
                                "properties": {
                                    "inputUsername": { "type": "string", "example": "user1243" }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Friend request declined",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "Friend request declined." }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "Player id is required" }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "User not found." }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "Server error." }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/friends/get/requests": {
            "get": {
                "summary": "Get friend requests list",
                "tags": ["Friends"],
                "description": "Get friend requests list for the user.",
                "parameters": [
                    {
                        "name": "user",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "uuid": { "type": "string", "example": "c1b1a8e2-1e7a-4e3c-8c7e-1b2a3c4d5e6f" },
                                "role": { "type": "string", "example": "user" },
                                "iat": { "type": "integer", "example": "1700000000" },
                                "exp": { "type": "integer", "example": "1700036000" }
                            }
                        },
                        "description": "Encoded user information including UUID, role, issued-at (`iat`), and expiration (`exp`)."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Friend requests list get returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "friendsRequests": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": { "type": "integer", "example": 67890 },
                                                    "sender_username": { "type": "string", "example": "User12" },
                                                    "receiver_username": { "type": "string", "example": "User123" }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "Unauthorized" }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "User not found." }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "Server error." }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/friends/delete": {
            "delete": {
                "summary": "Delete friend from friends list",
                "tags": ["Friends"],
                "description": "Delete friend from friends list.",
                "parameters": [
                    {
                        "name": "user",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "uuid": { "type": "string", "example": "c1b1a8e2-1e7a-4e3c-8c7e-1b2a3c4d5e6f" },
                                "role": { "type": "string", "example": "user" },
                                "iat": { "type": "integer", "example": "1700000000" },
                                "exp": { "type": "integer", "example": "1700036000" }
                            }
                        },
                        "description": "Encoded user information including UUID, role, issued-at (`iat`), and expiration (`exp`)."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["inputUsername"],
                                "properties": {
                                    "inputUsername": { "type": "string", "example": "user1243" }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Friendship successfully deleted.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "Friendship successfully deleted." }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "Player id is required" }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "User not found." }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "Server error." }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
		"/friends/block": {
			"post": {
				"summary": "Block user",
				"tags": ["Friends"],
				"description": "Block a user.",
				"parameters": [
					{
						"name": "user",
						"in": "header",
						"required": true,
						"schema": {
							"type": "object",
							"properties": {
								"uuid": { "type": "string", "example": "c1b1a8e2-1e7a-4e3c-8c7e-1b2a3c4d5e6f" },
								"role": { "type": "string", "example": "user" },
								"iat": { "type": "integer", "example": "1700000000" },
								"exp": { "type": "integer", "example": "1700036000" }
							}
						},
						"description": "Encoded user information including UUID, role, issued-at (`iat`), and expiration (`exp`)."
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": ["inputUsername"],
								"properties": {
									"inputUsername": { "type": "string", 	"example":"user123" }
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "User Blocked Successfully",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": { "type": "string", "example": "User blocked successfully." }
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid request",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": { "type": "string", "example": "User name is required." }
									}
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": { "type": "string", "example": "User not found." }
									}
								}
							}
						}
					},
					"409": {
						"description": "User already blocked",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": { "type": "string", "example": "User already blocked." }
									}
								}
							}
						}
					},
					"500": {
						"description": "Server error",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": { "type": "string", "example": "Server error." }
									}
								}
							}
						}
					}
				}
			}
		},
        "/friends/unblock": {
            "delete": {
				"summary": "Unblock user",
				"tags": ["Friends"],
				"description": "Unblock a user.",
				"parameters": [
					{
						"name": "user",
						"in": "header",
						"required": true,
						"schema": {
							"type": "object",
							"properties": {
								"uuid": { "type": "string", "example": "c1b1a8e2-1e7a-4e3c-8c7e-1b2a3c4d5e6f" },
								"role": { "type": "string", "example": "user" },
								"iat": { "type": "integer", "example": "1700000000" },
								"exp": { "type": "integer", "example": "1700036000" }
							}
						},
						"description": "Encoded user information including UUID, role, issued-at (`iat`), and expiration (`exp`)."
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": ["inputUsername"],
								"properties": {
									"inputUsername": { "type": "string", 	"example":"user123" }
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "User Unblocked Successfully",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": { "type": "string", "example": "User unblocked successfully." }
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid request",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": { "type": "string", "example": "User name is required." }
									}
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": { "type": "string", "example": "User not found." }
									}
								}
							}
						}
					},
					"409": {
						"description": "You cannot unblock a user that you have not blocked",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": { "type": "string", "example": "User already unblocked." }
									}
								}
							}
						}
					},
					"500": {
						"description": "Server error",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": { "type": "string", "example": "Server error." }
									}
								}
							}
						}
					}
				}
			}
		},
        "/friends/get/blocked": {
            "get": {
                "summary": "Get blocked users list",
                "tags": ["Friends"],
                "description": "Get blocked users list for the user.",
                "parameters": [
                    {
                        "name": "user",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "uuid": { "type": "string", "example": "c1b1a8e2-1e7a-4e3c-8c7e-1b2a3c4d5e6f" },
                                "role": { "type": "string", "example": "user" },
                                "iat": { "type": "integer", "example": "1700000000" },
                                "exp": { "type": "integer", "example": "1700036000" }
                            }
                        },
                        "description": "Encoded user information including UUID, role, issued-at (`iat`), and expiration (`exp`)."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Blocked users list get returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "blockedUsers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": { "type": "integer", "example": "67890" },
                                                    "blocker_username": { "type": "string", "example": "User1233" },
                                                    "blocked_username": { "type": "string", "example": "User1235" }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "Unauthorized" }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "User not found." }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "Server error." }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/friends/get/friendlist": {
            "get": {
                "summary": "Get user friendlist",
                "tags": ["Friends"],
                "description": "Get friendlist for the user.",
                "parameters": [
                    {
                        "name": "user",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "uuid": { "type": "string", "example": "c1b1a8e2-1e7a-4e3c-8c7e-1b2a3c4d5e6f" },
                                "role": { "type": "string", "example": "user" },
                                "iat": { "type": "integer", "example": "1700000000" },
                                "exp": { "type": "integer", "example": "1700036000" }
                            }
                        },
                        "description": "Encoded user information including UUID, role, issued-at (`iat`), and expiration (`exp`)."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users friendlist get returned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "friendlist": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": { "type": "integer", "example": "67890" },
                                                    "friend_username": { "type": "string", "example": "User1233" },
													"friend_uuid": { "type": "string", "example": "c1b1a8e2-1e7a-4e3c-8c7e-1b2a3c4d5e6f" }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "Unauthorized" }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "User not found." }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "Server error." }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/update-info/enable-2fa": {
            "post": {
                "summary": "Enable 2FA for user",
                "tags": ["Update Infos"],
                "description": "Enable 2FA for user.",
                "parameters": [
                    {
                        "name": "user",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "uuid": { "type": "string", "example": "c1b1a8e2-1e7a-4e3c-8c7e-1b2a3c4d5e6f" },
                                "role": { "type": "string", "example": "user" },
                                "iat": { "type": "integer", "example": "1700000000" },
                                "exp": { "type": "integer", "example": "1700036000" }
                            }
                        },
                        "description": "Encoded user information including UUID, role, issued-at (`iat`), and expiration (`exp`)."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["password"],
                                "properties": {
                                    "password": { "type": "string", "format": "password", "example": "Password1234" }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "2FA enabled.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "2FA enabled." },
                                        "qrCode": { "type": "string", "example": "https://example.com/qr-code.png" }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "2FA already enabled" }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "User not found." }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "Server error." }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/update-info/verify-2fa": {
            "post": {
                "summary": "Verify 2FA token",
                "tags": ["Update Infos"],
                "description": "Verify 2FA token during login for example.",
                "parameters": [
                    {
                        "name": "user",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "uuid": { "type": "string", "example": "c1b1a8e2-1e7a-4e3c-8c7e-1b2a3c4d5e6f" },
                                "role": { "type": "string", "example": "user" },
                                "iat": { "type": "integer", "example": "1700000000" },
                                "exp": { "type": "integer", "example": "1700036000" }
                            }
                        },
                        "description": "Encoded user information including UUID, role, issued-at (`iat`), and expiration (`exp`)."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["token"],
                                "properties": {
                                    "token": { "type": "string", "example": "123456" }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "2FA enabled.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "2FA verified." },
                                        "valid": { "type": "boolean", "example": "true" }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "2FA not enabled" },
                                        "valid": { "type": "boolean", "example": "false" }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "User not found." },
                                        "valid": { "type": "boolean", "example": "false" }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": { "type": "string", "example": "Server error." },
                                        "valid": { "type": "boolean", "example": "false" }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
		"/update-info/disable-2fa": {
			"delete": {
				"summary": "Disable 2FA for user",
                "tags": ["Update Infos"],
                "description": "Disable 2FA for user.",
                "parameters": [
                    {
                        "name": "user",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "uuid": { "type": "string", "example": "c1b1a8e2-1e7a-4e3c-8c7e-1b2a3c4d5e6f" },
                                "role": { "type": "string", "example": "user" },
                                "iat": { "type": "integer", "example": "1700000000" },
                                "exp": { "type": "integer", "example": "1700036000" }
                            }
                        },
                        "description": "Encoded user information including UUID, role, issued-at (`iat`), and expiration (`exp`)."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["password"],
                                "properties": {
                                    "password": { "type": "string", "format": "password", "example": "Password1234" }
                                }
                            }
                        }
                    }
                },
				"responses": {
					"200": {
						"description": "2FA disabled.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": { "type": "string", "example": "2FA disabled." }
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid request",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": { "type": "string", "example": "2FA not enabled" }
									}
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": { "type": "string", "example": "User not found." }
									}
								}
							}
						}
					},
					"500": {
						"description": "Server error",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": { "type": "string", "example": "Server error." }
									}
								}
							}
						}
					}
				}
			}
		}
    }
}
